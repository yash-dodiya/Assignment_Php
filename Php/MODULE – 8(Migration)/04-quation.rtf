{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Calibri;}{\f2\fnil\fcharset0 Segoe UI;}{\f3\fnil\fcharset0 var;}}
{\colortbl ;\red23\green23\blue23;\red255\green255\blue255;\red255\green0\blue0;\red0\green0\blue255;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\fi720\li1440\sa160\sl259\slmult0\qj\f0\fs32\lang9 MODULE \f1\endash\f0  8(Migration)\par

\pard\sa160\sl259\slmult0\qj\par

\pard\sa160\sl259\slmult0\ul\b\fs36 Q-4:- Create All Migration for Employee management :\par

\pard\sb100\sa100\sl240\slmult1\cf1\highlight2\ulnone\b0\f2\fs30 To generate a migration you need run a command\par

\pard\sl240\slmult1\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf3\highlight0\f3\fs24 php artisan make:migration create_employee_table\cf0\par

\pard\sb100\sa100\sl240\slmult1\cf1\highlight2\f2\fs30 this will generate a file in\~\f3\fs20 database\\migrations\f2\fs30\~folder.\par
The file consist of new class extending the migration class of LARAVEL.\par
The new class consist of 2 major function\~\cf3\f3\fs20 up()\f2\fs30\~\cf1 &\~\cf3\f3\fs20 down()\f2\fs30 .\cf1\line The\~\cf3\f3\fs20 up()\f2\fs30\~\cf1 function holds all information about migrating the file.\par

\pard\sl240\slmult1\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0\highlight0\f3\fs24\par
public function up()\par
\{\par
    Schema::create('contacts', function (Blueprint $table) \par
    \{\par
            $table->id();\par
            $table->string('name');\par
            $table->string('mobile_no');\par
            $table->boolean('status');\par
            $table->timestamps();\par
    \});\par
\}\par
\par

\pard\sb100\sa100\sl240\slmult1\cf1\highlight2\f2\fs30 where as\~\cf3\f3\fs20 down()\f2\fs30\~\cf1 function holds information about reversing the migration action.\par
\par

\pard\sl240\slmult1\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0\highlight0\f3\fs24 public function down()\par
\{\par
    Schema::dropIfExists('contacts');\par
\}\par
\par

\pard\keep\keepn\sb40\sl259\slmult0\cf1\highlight2\f2\fs26 Run & Rollback The Migration\fs36\par

\pard\sb100\sa100\sl240\slmult1\fs30 To run a migration we need to use the command\par

\pard\sl240\slmult1\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf3\highlight0\f3\fs24 php artisan migrate\cf0\par

\pard\sb100\sa100\sl240\slmult1\cf1\highlight2\f2\fs30 For rolling back latest migration we have command\par

\pard\sl240\slmult1\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf3\highlight0\f3\fs24 php artisan migrate:rollback\par

\pard\sb100\sa100\sl240\slmult1\cf1\highlight2\f2\fs30 when we have to rollback till specific steps we can pass steps in rollback command like\par

\pard\sl240\slmult1\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf3\highlight0\f3\fs24 php artisan migrate:rollback --step=3\cf0\par

\pard\sb100\sa100\sl240\slmult1\cf1\highlight2\f2\fs30 this will rollback the migration upto 3 step starting from latest.\par

\pard\keep\keepn\sb40\sl259\slmult0\cf3\fs26 Adding/Updating Columns in Table\cf1\fs36\par

\pard\sb100\sa100\sl240\slmult1\fs30 To perform any task we need to generate a migration file similar to what we have created while creating the migration.\par
the only change will be there in migration name, always try to write the migration name descriptive which helps laravel to understand the table name in migrations.\line For e.g. Updating the column\~\f3\fs20 name\f2\fs30\~we should run command like\par

\pard\sl240\slmult1\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf3\highlight0\f3\fs24 php artisan make:migration update_name_column_in_contacts_table\par

\pard\sb100\sa100\sl240\slmult1\cf1\highlight2\f2\fs30 Read more at\~{\cf4{\field{\*\fldinst{HYPERLINK "https://laravel.com/docs/9.x/migrations"}}{\fldrslt{\ul\cf4\ul Laravel}}}}{\cf4\f2\fs30{\field{\*\fldinst{HYPERLINK "https://laravel.com/docs/9.x/migrations"}}{\fldrslt{\ul\cf4\ul  Doc}}}}\cf1\ulnone\f2\fs30\par

\pard\keep\keepn\sb40\sl259\slmult0\fs26 Column Modifiers\fs36\par

\pard\sb100\sa100\sl240\slmult1\fs30 Column Modifiers are nothing but a predefined function available in LARAVEL Migration by using that you can make any column\~\f3\fs20 nullable\f2\fs30 , Set Column\~\f3\fs20 default\f2\fs30\~and many more.\par
You can check the available\~\cf4 Laravel Column Modifier\cf1 .\par

\pard\keep\keepn\sb40\sl259\slmult0\fs26 Add/Rename/Remove Database Indexes\fs36\par

\pard\sb100\sa100\sl240\slmult1\fs30 Laravel Migration support few types of INDEXES for e.g.\par

\pard\sl240\slmult1\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0\highlight0\f3\fs24 use Illuminate\\Database\\Schema\\Blueprint;\par
use Illuminate\\Support\\Facades\\Schema;\par
\par
Schema::table('users', function (Blueprint $table) \{\par
    $table->index('email');\par
\});\par

\pard\sb100\sa100\sl240\slmult1\cf1\highlight2\f2\fs30\par
For renaming a index you can use\~\f3\fs20 renameIndex()\f2\fs30\~for e.g.\par

\pard\sl240\slmult1\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0\highlight0\f3\fs24 $table->renameIndex('email', 'mobile_no');\par

\pard\sb100\sa100\sl240\slmult1\cf1\highlight2\f2\fs30\par
For dropping a index you can use\~\f3\fs20 dropIndex()\f2\fs30\~for e.g.\par

\pard\sl240\slmult1\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0\highlight0\f3\fs24 $table->dropIndex('email');\par

\pard\keep\keepn\sb40\sl259\slmult0\cf1\highlight2\f2\fs26 Foreign Key Constraints\fs36\par

\pard\sb100\sa100\sl240\slmult1\fs30 Laravel also provides support for creating foreign key constraints, which are used to force referential integrity at the database level.\par

\pard\sl240\slmult1\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0\highlight0\f3\fs24 $table->foreignId('user_id')\par
      ->constrained('users')\par
      ->cascadeOnUpdate()\par
      ->cascadeOnDelete();\par

\pard\sa160\sl259\slmult0\f0\fs22\par

\pard\sa200\sl276\slmult1\par
}
